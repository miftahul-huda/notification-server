apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  ports:
  - port: 9092
    name: kafka
    targetPort: 9092
  clusterIP: None
  selector:
    app: kafka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: "kafka"
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka
        ports:
        - containerPort: 9092
          name: kafka
        env:
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: kafka-0.kafka.default.svc.cluster.local
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://:9092
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka-0.kafka.default.svc.cluster.local:9092
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "3"
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: "0"
        volumeMounts:
        - name: kafka-persistent-storage
          mountPath: /kafka
  volumeClaimTemplates:
  - metadata:
      name: kafka-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  ports:
  - port: 2181
    name: client
  clusterIP: None
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
spec:
  serviceName: "zookeeper"
  replicas: 3
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: wurstmeister/zookeeper
        ports:
        - containerPort: 2181
          name: client
        env:
        - name: ZOO_MY_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['spec.pod.beta.kubernetes.io/ordinal']
        - name: ZOO_SERVERS
          value: >-
            server.1=zookeeper-0.zookeeper.default.svc.cluster.local:2888:3888;
            server.2=zookeeper-1.zookeeper.default.svc.cluster.local:2888:3888;
            server.3=zookeeper-2.zookeeper.default.svc.cluster.local:2888:3888
        volumeMounts:
        - name: zookeeper-persistent-storage
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: zookeeper-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-producer-server
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: notification-producer-server
  template:
    metadata:
      labels:
        app: notification-producer-server
    spec:
      containers:
      - name: notification-producer-server
        image: gcr.io/telkomsel-retail-intelligence/notification-producer-server # Replace with your Node.js app image
        ports:
        - containerPort: 3000 # Or your app's port
        env:
        - name: kafkaBrokerAddress 
          value: kafka-0.kafka.default.svc.cluster.local:9092 # Connect to Kafka service
        - name: kafkaTopic 
          value: app-notification 
        - name: kafkaClientId 
          value: app-notification-client
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-consumer-server
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: notification-consumer-server
  template:
    metadata:
      labels:
        app: notification-consumer-server
    spec:
      containers:
      - name: notification-consumer-server
        image: gcr.io/telkomsel-retail-intelligence/notification-consumer-server # Replace with your Node.js app image
        ports:
        - containerPort: 3000 # Or your app's port
        env:
        - name: kafkaBrokerAddress 
          value: kafka-0.kafka.default.svc.cluster.local:9092 # Connect to Kafka service
        - name: kafkaTopic 
          value: app-notification 
        - name: kafkaClientId 
          value: app-notification-client